<Window x:Class="NRI.Events" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:local="clr-namespace:NRI" 
        Title="Events" Height="450" Width="800" >
    <Window.Resources>
        <!-- Стили для ретро-оформления -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF8C00"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Courier New"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Courier New"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#FF8C00"/>
        </Style>
        <local:Kasyanov_NRIDataSet x:Key="kasyanov_NRIDataSet"/>
        <CollectionViewSource x:Key="eventsViewSource" Source="{Binding Events, Source={StaticResource kasyanov_NRIDataSet}}"/>
    </Window.Resources>
    <Grid DataContext="{StaticResource eventsViewSource}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">
            <Button Content="Save" Click="SaveButton_Click" Margin="10"/>
            <Button Content="Delete" Click="DeleteButton_Click" Margin="10"/>
            <Button Content="Main Menu" Click="MainMenu_Click" Margin="10"/>
            <Button Content="Exit" Click="Showdown_click" Margin="10"/>
        </StackPanel>
        <DataGrid x:Name="eventsDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource eventsViewSource}}" RowDetailsVisibilityMode="VisibleWhenSelected" Margin="0,0,0,62" Grid.RowSpan="2">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="eventIDColumn" Binding="{Binding EventID}" Header="Event ID" IsReadOnly="True" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="eventNameColumn" Binding="{Binding EventName}" Header="Event Name" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="descriptionColumn" Binding="{Binding Description}" Header="Description" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="organizerIDColumn" Binding="{Binding OrganizerID}" Header="Organizer ID" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="systemIDColumn" Binding="{Binding SystemID}" Header="System ID" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="settingIDColumn" Binding="{Binding SettingID}" Header="Setting ID" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="maxParticipantsColumn" Binding="{Binding MaxParticipants}" Header="Max Participants" Width="SizeToHeader"/>
                <DataGridTemplateColumn x:Name="eventDateColumn" Header="Event Date" Width="SizeToHeader">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding EventDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>